CREATE TABLE CLIENTES (

ID_CLIENTE INT NOT NULL PRIMARY KEY,

IDENTIFICACION INT NOT NULL,

NOMBRE_CLIENTE VARCHAR2 (255) NOT NULL,

PRIMER_APELLIDO VARCHAR2 (255) NOT NULL,

SEGUNDO_APELLIDO VARCHAR2 (255) NOT NULL,

DIRECCION_CLIENTE VARCHAR2(255)NOT NULL,

CELULAR INT NOT NULL
)

CREATE TABLE MASCOTAS (

ID_MASCOTA INT NOT NULL PRIMARY KEY,

NOMBRE_MASCOTA VARCHAR2 (255) NOT NULL,

RAZA VARCHAR2(20) NOT NULL,

PESO DECIMAL(18,2) NOT NULL,

ESPECIE INT NOT NULL,

ID_CLIENTE INT NOT NULL
)



CREATE TABLE VETERINARIO (

ID_VETERINARIO INT NOT NULL PRIMARY KEY,

NOMBRE_VETERINARIO VARCHAR2 (255),

APELLIDO_PATERNO VARCHAR2 (255) NOT NULL,

CODIGO_VETERINARIO INT  NOT NULL,

ESPECIALIDAD INT NOT NULL
)



CREATE TABLE SERVICIO (

ID_SERVICIO INT NOT NULL PRIMARY KEY,

NOMBRE_SERVICIO VARCHAR2(255) NOT NULL,

DESCRIPCION_SERVICIO VARCHAR2(255) NOT NULL,

COSTO DECIMAL (18,2) NOT NULL
)



CREATE TABLE PRODUCTO (

ID_PRODUCTO INT NOT NULL PRIMARY KEY,

NOMBRE_PRODUCTO VARCHAR2 (255), 

DESCRIPCION_PRODUCTO VARCHAR2(255), 

COSTO DECIMAL (18,2) NOT NULL,

ID_PROVEEDOR INT NOT NULL
)



CREATE TABLE ESPECIE (

ID_ESPECIE INT NOT NULL PRIMARY KEY,

FAMILIA VARCHAR2 (255) NOT NULL, 

ESPECIE VARCHAR2 (255) NOT NULL

)



CREATE TABLE ESPECIALIDAD1 (

ID_ESPECIALIDAD INT NOT NULL PRIMARY KEY,

NOMBRE_ESPECIALIDAD VARCHAR2(255) NOT NULL,

DESCRIPCION_ESPECIALIDAD VARCHAR2 (255) NOT NULL
)



CREATE TABLE FICHA_MEDICA(

ID_FICHA_MEDICA INT PRIMARY KEY NOT NULL,

ID_MASCOTA INT NOT NULL, 

ID_VETERINARIO INT NOT NULL,

MOTIVO VARCHAR2 (255) NOT NULL,

DIAGNOSTICO VARCHAR2(255) NOT NULL,

TRATAMIENTO VARCHAR2(255) NOT NULL
)



CREATE TABLE CITAS (

ID_CITA INT NOT NULL PRIMARY KEY,

FECHA_CITA DATE NOT NULL,

ID_CLIENTE INT NOT NULL, 

ID_VETERINARIO INT NOT NULL,

ID_MASCOTA INT NOT NULL
)



CREATE TABLE PROVEEDOR (

ID_PROVEEDOR INT NOT NULL PRIMARY KEY,

NOMBRE_PROVEEDOR VARCHAR2 (255) NOT NULL,

DIRECCION_PROVEEDOR VARCHAR2(255) NOT NULL
)



ALTER TABLE MASCOTAS 

ADD CONSTRAINT FK_ID_CLIENTE FOREIGN KEY (ID_CLIENTE)

REFERENCES CLIENTES(ID_CLIENTE);



ALTER TABLE CITAS 

ADD CONSTRAINT FK_CITAS FOREIGN KEY (ID_VETERINARIO)

REFERENCES VETERINARIO(ID_VETERINARIO);



ALTER TABLE VETERINARIO

ADD CONSTRAINT FK_ESPECIALIDAD_VET FOREIGN KEY (ESPECIALIDAD)

REFERENCES ESPECIALIDAD1(ID_ESPECIALIDAD);



ALTER TABLE MASCOTAS 

ADD CONSTRAINT FK_ESPECIE FOREIGN KEY (ESPECIE)

REFERENCES ESPECIE(ID_ESPECIE);



ALTER TABLE CITAS 

ADD CONSTRAINT FK_CITAS_MASCOTA FOREIGN KEY (ID_MASCOTA)

REFERENCES MASCOTAS (ID_MASCOTA);



ALTER TABLE CITAS 

ADD CONSTRAINT FK_CITAS_CLIENTE FOREIGN KEY (ID_CLIENTE)

REFERENCES CLIENTES (ID_CLIENTE);



ALTER TABLE CITAS 

ADD CONSTRAINT FK_CITAS_VETERINARIO FOREIGN KEY (ID_VETERINARIO)

REFERENCES VETERINARIO (ID_VETERINARIO);



ALTER TABLE FICHA_MEDICA 

ADD CONSTRAINT FK_FICHA_MEDICA_VETERINARIO FOREIGN KEY (ID_VETERINARIO)

REFERENCES VETERINARIO (ID_VETERINARIO);



ALTER TABLE FICHA_MEDICA 

ADD CONSTRAINT FK_FICHA_MASCOTA FOREIGN KEY (ID_MASCOTA)

REFERENCES MASCOTAS (ID_MASCOTA);



ALTER TABLE PRODUCTO 

ADD CONSTRAINT FK_FICHA_PRODUCTO FOREIGN KEY (ID_PRODUCTO)

REFERENCES PRODUCTO (ID_PRODUCTO);

--INSERTS DE PRUEBA
-- INSERTS para la tabla CLIENTES
INSERT INTO CLIENTES (ID_CLIENTE, IDENTIFICACION, NOMBRE_CLIENTE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, DIRECCION_CLIENTE, CELULAR)
VALUES (1, 12345678, 'Juan', 'Pérez', 'Gómez', 'Calle Falsa 123', 88887777);

INSERT INTO CLIENTES (ID_CLIENTE, IDENTIFICACION, NOMBRE_CLIENTE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, DIRECCION_CLIENTE, CELULAR)
VALUES (2, 87654321, 'María', 'López', 'Rodríguez', 'Avenida Siempreviva 742', 88776655);

-- INSERTS para la tabla MASCOTAS
INSERT INTO MASCOTAS (ID_MASCOTA, NOMBRE_MASCOTA, RAZA, PESO, ESPECIE, ID_CLIENTE)
VALUES (1, 'Firulais', 'Labrador', 30.5, 1, 1);

INSERT INTO MASCOTAS (ID_MASCOTA, NOMBRE_MASCOTA, RAZA, PESO, ESPECIE, ID_CLIENTE)
VALUES (2, 'Mishi', 'Siames', 4.3, 2, 2);

-- INSERTS para la tabla VETERINARIO
INSERT INTO VETERINARIO (ID_VETERINARIO, NOMBRE_VETERINARIO, APELLIDO_PATERNO, CODIGO_VETERINARIO, ESPECIALIDAD)
VALUES (1, 'Carlos', 'Ramírez', 1234, 1);


-- INSERTS para la tabla SERVICIO
INSERT INTO SERVICIO (ID_SERVICIO, NOMBRE_SERVICIO, DESCRIPCION_SERVICIO, COSTO)
VALUES (1, 'Consulta General', 'Consulta médica general para mascotas', 50.0);

INSERT INTO SERVICIO (ID_SERVICIO, NOMBRE_SERVICIO, DESCRIPCION_SERVICIO, COSTO)
VALUES (2, 'Vacunación', 'Aplicación de vacunas para mascotas', 25.0);

-- INSERTS para la tabla PRODUCTO
INSERT INTO PRODUCTO (ID_PRODUCTO, NOMBRE_PRODUCTO, DESCRIPCION_PRODUCTO, COSTO, ID_PROVEEDOR)
VALUES (1, 'Alimento para Perro', 'Saco de 15kg de alimento balanceado', 40.0, 1);

INSERT INTO PRODUCTO (ID_PRODUCTO, NOMBRE_PRODUCTO, DESCRIPCION_PRODUCTO, COSTO, ID_PROVEEDOR)
VALUES (2, 'Juguete para Gato', 'Ratón de juguete con catnip', 5.0, 2);

-- INSERTS para la tabla ESPECIE
INSERT INTO ESPECIE (ID_ESPECIE, FAMILIA, ESPECIE)
VALUES (1, 'Canidae', 'Perro');

INSERT INTO ESPECIE (ID_ESPECIE, FAMILIA, ESPECIE)
VALUES (2, 'Felidae', 'Gato');

-- INSERTS para la tabla ESPECIALIDAD1
INSERT INTO ESPECIALIDAD1 (ID_ESPECIALIDAD, NOMBRE_ESPECIALIDAD, DESCRIPCION_ESPECIALIDAD)
VALUES (1, 'Medicina General', 'Especialidad en medicina general para mascotas');

--PROCEDIMIENTOS CRUD CLIENTES
--CREATE
CREATE SEQUENCE CLIENTE_SEQ
START WITH 4
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_CLIENTE(
    P_IDENTIFICACION IN INT,
    P_NOMBRE_CLIENTE IN VARCHAR2,
    P_PRIMER_APELLIDO IN VARCHAR2,
    P_SEGUNDO_APELLIDO IN VARCHAR2,
    P_DIRECCION_CLIENTE IN VARCHAR2,
    P_CELULAR IN INT
) IS
    v_id_cliente CLIENTES.ID_CLIENTE%TYPE;
BEGIN
    SELECT CLIENTE_SEQ.NEXTVAL INTO v_id_cliente FROM dual;
    
    INSERT INTO CLIENTES (ID_CLIENTE, IDENTIFICACION, NOMBRE_CLIENTE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, DIRECCION_CLIENTE, CELULAR)
    VALUES (v_id_cliente, P_IDENTIFICACION, P_NOMBRE_CLIENTE, P_PRIMER_APELLIDO, P_SEGUNDO_APELLIDO, P_DIRECCION_CLIENTE, P_CELULAR);
END;

BEGIN
    INSERTAR_CLIENTE(
        P_IDENTIFICACION => 33445678,
        P_NOMBRE_CLIENTE => 'Ignacio',
        P_PRIMER_APELLIDO => 'Canas',
        P_SEGUNDO_APELLIDO => 'Carreas',
        P_DIRECCION_CLIENTE => 'Calle Puruses 11801',
        P_CELULAR => 72916960
    );
END;

--UPDATE 
CREATE OR REPLACE PROCEDURE ACTUALIZAR_CLIENTE(
    P_ID_CLIENTE IN INT,
    P_IDENTIFICACION IN INT,
    P_NOMBRE_CLIENTE IN VARCHAR2,
    P_PRIMER_APELLIDO IN VARCHAR2,
    P_SEGUNDO_APELLIDO IN VARCHAR2,
    P_DIRECCION_CLIENTE IN VARCHAR2,
    P_CELULAR IN INT
) IS
BEGIN
    UPDATE CLIENTES
    SET IDENTIFICACION = P_IDENTIFICACION,
        NOMBRE_CLIENTE = P_NOMBRE_CLIENTE,
        PRIMER_APELLIDO = P_PRIMER_APELLIDO,
        SEGUNDO_APELLIDO = P_SEGUNDO_APELLIDO,
        DIRECCION_CLIENTE = P_DIRECCION_CLIENTE,
        CELULAR = P_CELULAR
    WHERE ID_CLIENTE = P_ID_CLIENTE;
END;

BEGIN
    ACTUALIZAR_CLIENTE(
        P_ID_CLIENTE => 4,
        P_IDENTIFICACION => 9009932,
        P_NOMBRE_CLIENTE => 'Ignacio',
        P_PRIMER_APELLIDO => 'Cannas',
        P_SEGUNDO_APELLIDO => 'Carrera',
        P_DIRECCION_CLIENTE => 'Calle guayabos',
        P_CELULAR => 72916960
    );
END;

--ELIMINAR
CREATE OR REPLACE PROCEDURE ELIMINAR_CLIENTE(
    P_ID_CLIENTE IN INT
) IS
BEGIN
    DELETE FROM CLIENTES WHERE ID_CLIENTE = P_ID_CLIENTE;
END;

BEGIN
    ELIMINAR_CLIENTE(P_ID_CLIENTE => 4);
END;

--LEER
CREATE OR REPLACE VIEW LEER_CLIENTES AS
SELECT ID_CLIENTE, IDENTIFICACION, NOMBRE_CLIENTE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, DIRECCION_CLIENTE, CELULAR
FROM CLIENTES;

CREATE OR REPLACE PROCEDURE MOSTRAR_CLIENTES
IS
BEGIN
    FOR v_cliente IN (SELECT * FROM LEER_CLIENTES) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_cliente.ID_CLIENTE || 
                             ', Identificación: ' || v_cliente.IDENTIFICACION || 
                             ', Nombre: ' || v_cliente.NOMBRE_CLIENTE || 
                             ', Primer Apellido: ' || v_cliente.PRIMER_APELLIDO || 
                             ', Segundo Apellido: ' || v_cliente.SEGUNDO_APELLIDO || 
                             ', Dirección: ' || v_cliente.DIRECCION_CLIENTE || 
                             ', Celular: ' || v_cliente.CELULAR);
    END LOOP;
END MOSTRAR_CLIENTES;


BEGIN
    MOSTRAR_CLIENTES;
END;



--PROCEDIMIENTOS CRUD ESPECIE
--CREATE
CREATE SEQUENCE ESPECIE_SEQ
START WITH 3
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_ESPECIE(
    P_FAMILIA IN VARCHAR2,
    P_ESPECIE IN VARCHAR2
) IS
    v_id_especie ESPECIE.ID_ESPECIE%TYPE;
BEGIN
    SELECT ESPECIE_SEQ.NEXTVAL INTO v_id_especie FROM dual;
    
    INSERT INTO ESPECIE (ID_ESPECIE, FAMILIA, ESPECIE)
    VALUES (v_id_especie, P_FAMILIA, P_ESPECIE);
END;

BEGIN
    INSERTAR_ESPECIE(
        P_FAMILIA => 'Felidae',
        P_ESPECIE => 'Leon'
    );
END;

--UPDATE
CREATE OR REPLACE PROCEDURE ACTUALIZAR_ESPECIE(
    P_ID_ESPECIE IN INT,
    P_FAMILIA IN VARCHAR2,
    P_ESPECIE IN VARCHAR2
) IS
BEGIN
    UPDATE ESPECIE
    SET FAMILIA = P_FAMILIA,
        ESPECIE = P_ESPECIE
    WHERE ID_ESPECIE = P_ID_ESPECIE;
END;

BEGIN
    ACTUALIZAR_ESPECIE(
        P_ID_ESPECIE => 3,
        P_FAMILIA => 'Felino',
        P_ESPECIE => 'Tigre'
    );
END;

--ELIMINAR
CREATE OR REPLACE PROCEDURE ELIMINAR_ESPECIE(
    P_ID_ESPECIE IN INT
) IS
BEGIN
    DELETE FROM ESPECIE WHERE ID_ESPECIE = P_ID_ESPECIE;
END;

BEGIN
    ELIMINAR_ESPECIE(P_ID_ESPECIE => 3);
END;

--LEER 
CREATE OR REPLACE VIEW LEER_ESPECIE AS
SELECT ID_ESPECIE, FAMILIA, ESPECIE
FROM ESPECIE;

CREATE OR REPLACE PROCEDURE MOSTRAR_ESPECIES
IS 
BEGIN
    FOR v_especie in (SELECT * FROM LEER_ESPECIE) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_especie.ID_ESPECIE ||
        ', Familia: ' || v_especie.FAMILIA ||
        ', Especie: ' || v_especie.ESPECIE);
    END LOOP;
END MOSTRAR_ESPECIES;

BEGIN 
    MOSTRAR_ESPECIES;
END;

--PROCEDIMIENTOS CRUD ESPECIALIDAD
--CREATE 
CREATE SEQUENCE ESPECIALIDAD_SEQ
START WITH 2
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_ESPECIALIDAD(
    P_NOMBRE_ESPECIALIDAD IN VARCHAR2,
    P_DESCRIPCION_ESPECIALIDAD IN VARCHAR2
) IS
    v_id_especialidad ESPECIALIDAD1.ID_ESPECIALIDAD%TYPE;
BEGIN
    SELECT ESPECIALIDAD_SEQ.NEXTVAL INTO v_id_especialidad FROM dual;

    INSERT INTO ESPECIALIDAD1 (ID_ESPECIALIDAD, NOMBRE_ESPECIALIDAD, DESCRIPCION_ESPECIALIDAD)
    VALUES (v_id_especialidad, P_NOMBRE_ESPECIALIDAD, P_DESCRIPCION_ESPECIALIDAD);
END;

BEGIN
    INSERTAR_ESPECIALIDAD(
        P_NOMBRE_ESPECIALIDAD => 'Medicina Interna',
        P_DESCRIPCION_ESPECIALIDAD => 'Especialidad en medicina interna para mascotas'
    );
END;

--UPDATE 
CREATE OR REPLACE PROCEDURE ACTUALIZAR_ESPECIALIDAD(
    P_ID_ESPECIALIDAD IN INT,
    P_NOMBRE_ESPECIALIDAD IN VARCHAR2,
    P_DESCRIPCION_ESPECIALIDAD IN VARCHAR2
) IS
BEGIN
    UPDATE ESPECIALIDAD1
    SET NOMBRE_ESPECIALIDAD = P_NOMBRE_ESPECIALIDAD,
        DESCRIPCION_ESPECIALIDAD = P_DESCRIPCION_ESPECIALIDAD
    WHERE ID_ESPECIALIDAD = P_ID_ESPECIALIDAD;
END;

BEGIN 
    ACTUALIZAR_ESPECIALIDAD(
        P_ID_ESPECIALIDAD => 2,
        P_NOMBRE_ESPECIALIDAD => 'Ingeniero Biomedico',
        P_DESCRIPCION_ESPECIALIDAD => 'Biomedico en cuidado de mascotas'
    );
END;
--ELIMINAR
CREATE OR REPLACE PROCEDURE ELIMINAR_ESPECIALIDAD(
    P_ID_ESPECIALIDAD IN INT
) IS
BEGIN
    DELETE FROM ESPECIALIDAD1 WHERE ID_ESPECIALIDAD = P_ID_ESPECIALIDAD;
END;

BEGIN
    ELIMINAR_ESPECIALIDAD(P_ID_ESPECIALIDAD => 2);
END;

--LEER
CREATE OR REPLACE VIEW LEER_ESPECIALIDAD AS
SELECT ID_ESPECIALIDAD, NOMBRE_ESPECIALIDAD, DESCRIPCION_ESPECIALIDAD
FROM ESPECIALIDAD1;

CREATE OR REPLACE PROCEDURE MOSTRAR_ESPECIALIDADES
IS
BEGIN
    FOR v_especialidad IN (SELECT * FROM LEER_ESPECIALIDAD) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_especialidad.ID_ESPECIALIDAD ||  
                             ', Nombre: ' || v_especialidad.NOMBRE_ESPECIALIDAD || 
                             ', Descripcion: ' || v_especialidad.DESCRIPCION_ESPECIALIDAD);
    END LOOP;
END MOSTRAR_ESPECIALIDADES;

BEGIN
    MOSTRAR_ESPECIALIDADES;
END;

--PROCEDIMIENTOS CRUD VETERINARIO
--CREATE 
CREATE SEQUENCE VETERINARIO_SEQ
START WITH 2
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_VETERINARIO(
    P_NOMBRE_VETERINARIO IN VARCHAR2,
    P_APELLIDO_PATERNO IN VARCHAR2,
    P_CODIGO_VETERINARIO IN INT,
    P_ESPECIALIDAD IN INT
) IS
    v_id_veterinario VETERINARIO.ID_VETERINARIO%TYPE;
BEGIN
    SELECT VETERINARIO_SEQ.NEXTVAL INTO v_id_veterinario FROM dual;

    INSERT INTO VETERINARIO (ID_VETERINARIO, NOMBRE_VETERINARIO, APELLIDO_PATERNO, CODIGO_VETERINARIO, ESPECIALIDAD)
    VALUES (v_id_veterinario, P_NOMBRE_VETERINARIO, P_APELLIDO_PATERNO, P_CODIGO_VETERINARIO, P_ESPECIALIDAD);
END;

BEGIN
    INSERTAR_VETERINARIO(
        P_NOMBRE_VETERINARIO => 'Roger',
        P_APELLIDO_PATERNO => 'Mora',
        P_CODIGO_VETERINARIO => 103,
        P_ESPECIALIDAD => 1
    );
END;

--UPDATE 
CREATE OR REPLACE PROCEDURE ACTUALIZAR_VETERINARIO(
    P_ID_VETERINARIO IN INT,
    P_NOMBRE_VETERINARIO IN VARCHAR2,
    P_APELLIDO_PATERNO IN VARCHAR2,
    P_CODIGO_VETERINARIO IN INT,
    P_ESPECIALIDAD IN INT
) IS
BEGIN
    UPDATE VETERINARIO
    SET NOMBRE_VETERINARIO = P_NOMBRE_VETERINARIO,
        APELLIDO_PATERNO = P_APELLIDO_PATERNO,
        CODIGO_VETERINARIO = P_CODIGO_VETERINARIO,
        ESPECIALIDAD = P_ESPECIALIDAD
    WHERE ID_VETERINARIO = P_ID_VETERINARIO;
END;

BEGIN
    ACTUALIZAR_VETERINARIO(
        P_ID_VETERINARIO => 1,
        P_NOMBRE_VETERINARIO => 'Carlos',
        P_APELLIDO_PATERNO => 'Canas',
        P_CODIGO_VETERINARIO => 222,
        P_ESPECIALIDAD => 1
    );
END;



--ELIMINAR
CREATE OR REPLACE PROCEDURE ELIMINAR_VETERINARIO(
    P_ID_VETERINARIO IN INT
) IS
BEGIN
    DELETE FROM VETERINARIO WHERE ID_VETERINARIO = P_ID_VETERINARIO;
END;

BEGIN
    ELIMINAR_VETERINARIO(P_ID_VETERINARIO => 2);
END;



--LEER
CREATE OR REPLACE VIEW LEER_VETERINARIOS AS 
SELECT ID_VETERINARIO, NOMBRE_VETERINARIO, APELLIDO_PATERNO, CODIGO_VETERINARIO, ESPECIALIDAD
FROM VETERINARIO;

CREATE OR REPLACE PROCEDURE MOSTRAR_VETERINARIOS
IS
BEGIN
    FOR v_veterinario IN (SELECT * FROM LEER_VETERINARIOS) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_veterinario.ID_VETERINARIO || 
                             ', Nombre: ' || v_veterinario.NOMBRE_VETERINARIO || 
                             ', Apellido: ' || v_veterinario.APELLIDO_PATERNO ||
                             ', Codigo: ' || v_veterinario.CODIGO_VETERINARIO || 
                             ', Especialidad: ' || v_veterinario.ESPECIALIDAD );
    END LOOP;
END MOSTRAR_VETERINARIOS;

BEGIN 
    MOSTRAR_VETERINARIOS;
END;

--PROCEDIMIENTOS CRUD MASCOTAS
--CREATE
CREATE SEQUENCE MASCOTAS_SEQ
START WITH 3
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_MASCOTA(
    P_NOMBRE_MASCOTA IN VARCHAR2,
    P_RAZA IN VARCHAR2,
    P_PESO IN DECIMAL,
    P_ESPECIE IN INT,
    P_ID_CLIENTE IN INT
) IS
    v_id_mascota MASCOTAS.ID_MASCOTA%TYPE;
BEGIN
    SELECT MASCOTAS_SEQ.NEXTVAL INTO v_id_mascota FROM dual;

    INSERT INTO MASCOTAS (ID_MASCOTA, NOMBRE_MASCOTA, RAZA, PESO, ESPECIE, ID_CLIENTE)
    VALUES (v_id_mascota, P_NOMBRE_MASCOTA, P_RAZA, P_PESO, P_ESPECIE, P_ID_CLIENTE);
END;

BEGIN
    INSERTAR_MASCOTA(
        P_NOMBRE_MASCOTA => 'Bilbo',
        P_RAZA => 'Yorkie',
        P_PESO => 25,
        P_ESPECIE => 1,
        P_ID_CLIENTE => 2
    );
END;

--UPDATE 
CREATE OR REPLACE PROCEDURE ACTUALIZAR_MASCOTA(
    P_ID_MASCOTA IN INT,
    P_NOMBRE_MASCOTA IN VARCHAR2,
    P_RAZA IN VARCHAR2,
    P_PESO IN DECIMAL,
    P_ESPECIE IN INT,
    P_ID_CLIENTE IN INT
) IS
BEGIN
    UPDATE MASCOTAS
    SET NOMBRE_MASCOTA = P_NOMBRE_MASCOTA,
        RAZA = P_RAZA,
        PESO = P_PESO,
        ESPECIE = P_ESPECIE,
        ID_CLIENTE = P_ID_CLIENTE
    WHERE ID_MASCOTA = P_ID_MASCOTA;
END;

BEGIN
    ACTUALIZAR_MASCOTA(
        P_ID_MASCOTA => 3,
        P_NOMBRE_MASCOTA => 'Bibo',
        P_RAZA => 'Bulldog',
        P_PESO => 40,
        P_ESPECIE => 1,
        P_ID_CLIENTE => 1
    );
END;

BEGIN
    ACTUALIZAR_MASCOTA(
        P_ID_MASCOTA => 1,
        P_NOMBRE_MASCOTA => 'Firu',
        P_RAZA => 'Rodweiller',
        P_PESO => 32,
        P_ESPECIE => 1,
        P_ID_CLIENTE => 2
    );
END;

--ELIMINAR 
CREATE OR REPLACE PROCEDURE ELIMINAR_MASCOTA(
    P_ID_MASCOTA IN INT
) IS
BEGIN
    DELETE FROM MASCOTAS WHERE ID_MASCOTA = P_ID_MASCOTA;
END;

BEGIN
    ELIMINAR_MASCOTA(P_ID_MASCOTA => 1);
END;

--LEER
CREATE OR REPLACE VIEW LEER_MASCOTAS AS 
SELECT ID_MASCOTA, NOMBRE_MASCOTA, RAZA, PESO, ESPECIE, ID_CLIENTE
FROM MASCOTAS;

CREATE OR REPLACE PROCEDURE MOSTRAR_MASCOTAS
IS
BEGIN
    FOR v_mascota IN (SELECT * FROM LEER_MASCOTAS) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_mascota.ID_MASCOTA || 
                             ', Nombre: ' || v_mascota.NOMBRE_MASCOTA ||
                             ', Raza: ' || v_mascota.RAZA || 
                             ', Peso: ' || v_mascota.PESO || 
                             ', Especie: ' || v_mascota.ESPECIE || 
                             ', Cliente: ' || v_mascota.ID_CLIENTE);
    END LOOP;
END MOSTRAR_MASCOTAS;

BEGIN 
    MOSTRAR_MASCOTAS;
END;

--PROCEDIMIENTOS CRUD PROVEEDOR
--CREATE 
CREATE SEQUENCE PROVEEDOR_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_PROVEEDOR(
    P_NOMBRE_PROVEEDOR IN VARCHAR2,
    P_DIRECCION_PROVEEDOR IN VARCHAR2
    
) IS v_id_proveedor PROVEEDOR.ID_PROVEEDOR%TYPE;
BEGIN 
    SELECT PROVEEDOR_SEQ.NEXTVAL INTO v_id_proveedor FROM dual;

    INSERT INTO PROVEEDOR(ID_PROVEEDOR, NOMBRE_PROVEEDOR, DIRECCION_PROVEEDOR) 
    VALUES (v_id_proveedor, P_NOMBRE_PROVEEDOR, P_DIRECCION_PROVEEDOR);
END;

BEGIN 
    INSERTAR_PROVEEDOR(
        P_NOMBRE_PROVEEDOR => 'Josue',
        P_DIRECCION_PROVEEDOR => 'Granadilla'
    );
END;

BEGIN 
    INSERTAR_PROVEEDOR(
        P_NOMBRE_PROVEEDOR => 'Mariana',
        P_DIRECCION_PROVEEDOR => 'Alajuela'
    );
END;

--UPDATE 
CREATE OR REPLACE PROCEDURE ACTUALIZAR_PROVEEDOR(
    P_ID_PROVEEDOR IN INT, 
    P_NOMBRE_PROVEEDOR IN VARCHAR2, 
    P_DIRECCION_PROVEEDOR IN VARCHAR2
) IS 
BEGIN 
    UPDATE PROVEEDOR
    SET NOMBRE_PROVEEDOR = P_NOMBRE_PROVEEDOR, 
        DIRECCION_PROVEEDOR = P_DIRECCION_PROVEEDOR
    WHERE ID_PROVEEDOR = P_ID_PROVEEDOR;
END;

BEGIN 
    ACTUALIZAR_PROVEEDOR(
        P_ID_PROVEEDOR => 1,
        P_NOMBRE_PROVEEDOR => 'Daniella',
        P_DIRECCION_PROVEEDOR => 'Cartago'
    );
END;

--ELIMINAR
CREATE OR REPLACE PROCEDURE ELIMINAR_PROVEEDOR(
    P_ID_PROVEEDOR IN INT
) IS 
BEGIN 
    DELETE FROM PROVEEDOR WHERE ID_PROVEEDOR = P_ID_PROVEEDOR;
END;

BEGIN 
    ELIMINAR_PROVEEDOR(P_ID_PROVEEDOR => 2);
END;
--LEER
CREATE OR REPLACE VIEW LEER_PROVEEDORES AS
SELECT ID_PROVEEDOR, NOMBRE_PROVEEDOR, DIRECCION_PROVEEDOR
FROM PROVEEDOR;

CREATE OR REPLACE PROCEDURE MOSTRAR_PROVEEDORES
IS
BEGIN
    FOR v_proveedor IN (SELECT * FROM LEER_PROVEEDORES) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_proveedor.ID_PROVEEDOR || 
                             ', Nombre: ' || v_proveedor.NOMBRE_PROVEEDOR ||
                             ', Direccion: ' || v_proveedor.DIRECCION_PROVEEDOR);
    END LOOP;
END MOSTRAR_PROVEEDORES;

BEGIN 
    MOSTRAR_PROVEEDORES;
END;

--PROCEDIMIENTOS CRUD SERVICIO 
--CREATE 
CREATE SEQUENCE FICHA_MEDICA_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_FICHA(
    P_ID_MASCOTA IN INT, 
    P_ID_VETERINARIO IN INT, 
    P_MOTIVO IN VARCHAR2, 
    P_DIAGNOSTICO IN VARCHAR2,
    P_TRATAMIENTO IN VARCHAR2
) IS
    v_id_ficha_medica FICHA_MEDICA.ID_FICHA_MEDICA%TYPE;
BEGIN 
    SELECT FICHA_MEDICA_SEQ.NEXTVAL INTO v_id_ficha_medica FROM dual;
    
    INSERT INTO FICHA_MEDICA (ID_FICHA_MEDICA, ID_MASCOTA, ID_VETERINARIO, MOTIVO, DIAGNOSTICO, TRATAMIENTO)
    VALUES (v_id_ficha_medica, P_ID_MASCOTA, P_ID_VETERINARIO, P_MOTIVO, P_DIAGNOSTICO, P_TRATAMIENTO);
END;

BEGIN
    INSERTAR_FICHA(
        P_ID_MASCOTA => 3,
        P_ID_VETERINARIO => 1,
        P_MOTIVO => 'Vacuna',
        P_DIAGNOSTICO => 'Enfermedad',
        P_TRATAMIENTO => 'Vacuna'
    );
END;

--UPDATE
CREATE OR REPLACE PROCEDURE ACTUALIZAR_FICHA(
    P_ID_FICHA_MEDICA IN INT,
    P_ID_MASCOTA IN INT, 
    P_ID_VETERINARIO IN INT, 
    P_MOTIVO IN VARCHAR2, 
    P_DIAGNOSTICO IN VARCHAR2, 
    P_TRATAMIENTO IN VARCHAR2
) IS 
BEGIN 
    UPDATE FICHA_MEDICA
    SET ID_MASCOTA = P_ID_MASCOTA,
        ID_VETERINARIO = P_ID_VETERINARIO,
        MOTIVO = P_MOTIVO, 
        DIAGNOSTICO = P_DIAGNOSTICO,
        TRATAMIENTO = P_TRATAMIENTO
    WHERE ID_FICHA_MEDICA = P_ID_FICHA_MEDICA;
END;

BEGIN 
    ACTUALIZAR_FICHA(
        P_ID_FICHA_MEDICA => 2,
        P_ID_MASCOTA => 3, 
        P_ID_VETERINARIO => 1, 
        P_MOTIVO => 'Sangrado Interno',
        P_DIAGNOSTICO => 'Cancer',
        P_TRATAMIENTO => 'Terapia'
    );
END;

--ELIMINAR
CREATE OR REPLACE PROCEDURE ELIMINAR_FICHA(
    P_ID_FICHA_MEDICA IN INT
) IS 
BEGIN 
    DELETE FROM FICHA_MEDICA WHERE ID_FICHA_MEDICA = P_ID_FICHA_MEDICA;
END;

BEGIN 
    ELIMINAR_FICHA(P_ID_FICHA_MEDICA => 2 );
END;

--LEER
CREATE OR REPLACE VIEW LEER_FICHA AS 
SELECT ID_FICHA_MEDICA, ID_MASCOTA, ID_VETERINARIO, MOTIVO, DIAGNOSTICO, TRATAMIENTO
FROM FICHA_MEDICA;

CREATE OR REPLACE PROCEDURE MOSTRAR_FICHAS
IS
BEGIN
    FOR v_ficha IN (SELECT * FROM LEER_FICHA) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_ficha.ID_FICHA_MEDICA || 
                             ', Mascota: ' || v_ficha.ID_MASCOTA ||
                             ', Veterinario: ' || v_ficha.ID_VETERINARIO ||
                             ', Motivo: ' || v_ficha.MOTIVO ||
                             ', Diagnostico: ' || v_ficha.DIAGNOSTICO || 
                             ', Tratamiento: ' || v_ficha.TRATAMIENTO);
    END LOOP;
END MOSTRAR_FICHAS;

BEGIN 
    MOSTRAR_FICHAS;
END;



--PROCEDIMIENTOS CRUD SERVICIO 
--CREATE 
CREATE SEQUENCE SERVICIO_SEQ
START WITH 3
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_SERVICIO(
    P_NOMBRE_SERVICIO IN VARCHAR2,
    P_DESCRIPCION_SERVICIO IN VARCHAR2, 
    P_COSTO IN NUMBER
) IS 
    v_id_servicio SERVICIO.ID_SERVICIO%TYPE;
BEGIN 
    SELECT SERVICIO_SEQ.NEXTVAL INTO v_id_servicio FROM dual;

    
    INSERT INTO SERVICIO(ID_SERVICIO, NOMBRE_SERVICIO, DESCRIPCION_SERVICIO, COSTO)
    VALUES(v_id_servicio, P_NOMBRE_SERVICIO, P_DESCRIPCION_SERVICIO, P_COSTO);
END;

BEGIN 
    INSERTAR_SERVICIO(
        P_NOMBRE_SERVICIO => 'Terapia',
        P_DESCRIPCION_SERVICIO => 'Curacion',
        P_COSTO => 1200
    );
END;

--UPDATE 
CREATE OR REPLACE PROCEDURE ACTUALIZAR_SERVICIO(
    P_ID_SERVICIO IN INT, 
    P_NOMBRE_SERVICIO IN VARCHAR2, 
    P_DESCRIPCION_SERVICIO IN VARCHAR2, 
    P_COSTO IN NUMBER
) IS
BEGIN 
    UPDATE SERVICIO
    SET NOMBRE_SERVICIO = P_NOMBRE_SERVICIO,
        DESCRIPCION_SERVICIO = P_DESCRIPCION_SERVICIO,
        COSTO = P_COSTO
    WHERE ID_SERVICIO = P_ID_SERVICIO;
END;

BEGIN 
    ACTUALIZAR_SERVICIO(
        P_ID_SERVICIO => 3,
        P_NOMBRE_SERVICIO => 'Vacunacion',
        P_DESCRIPCION_SERVICIO => 'Vacuna',
        P_COSTO => 3000
    );
END;

--ELIMINAR
CREATE OR REPLACE PROCEDURE ELIMINAR_SERVICIO(
    P_ID_SERVICIO IN INT
) IS 
BEGIN 
    DELETE FROM SERVICIO WHERE (ID_SERVICIO = P_ID_SERVICIO);
END;

BEGIN 
    ELIMINAR_SERVICIO(P_ID_SERVICIO => 3);
END;

--LEER 
CREATE OR REPLACE VIEW LEER_SERVICIO AS
SELECT ID_SERVICIO, NOMBRE_SERVICIO, DESCRIPCION_SERVICIO, COSTO
FROM SERVICIO;


CREATE OR REPLACE PROCEDURE MOSTRAR_SERVICIOS
IS
BEGIN
    FOR v_servicio IN (SELECT * FROM LEER_SERVICIO) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_servicio.ID_SERVICIO || 
                             ', Nombre: ' || v_servicio.NOMBRE_SERVICIO ||
                             ', Descripcion: ' || v_servicio.DESCRIPCION_SERVICIO ||
                             ', Costo: ' || v_servicio.COSTO);
    END LOOP;
END MOSTRAR_SERVICIOS;

BEGIN
    MOSTRAR_SERVICIOS;
END;

--PROCEDIMIENTOS CRUD PRODUCTO
--CREATE 
CREATE SEQUENCE PRODUCTO_SEQ
START WITH 3
INCREMENT BY 1  
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_PRODUCTO(
    P_NOMBRE_PRODUCTO IN VARCHAR2,
    P_DESCRIPCION_PRODUCTO IN VARCHAR2,
    P_COSTO IN NUMBER, 
    P_ID_PROVEEDOR IN INT
) IS 
    v_id_producto PRODUCTO.ID_PRODUCTO%TYPE;
BEGIN 
    SELECT PRODUCTO_SEQ.NEXTVAL INTO v_id_producto FROM dual;
    
    INSERT INTO PRODUCTO(ID_PRODUCTO, NOMBRE_PRODUCTO, DESCRIPCION_PRODUCTO, COSTO, ID_PROVEEDOR)
    VALUES(v_id_producto, P_NOMBRE_PRODUCTO, P_DESCRIPCION_PRODUCTO, P_COSTO, P_ID_PROVEEDOR);
END;

BEGIN 
    INSERTAR_PRODUCTO(
    P_NOMBRE_PRODUCTO => 'Pedigree',
    P_DESCRIPCION_PRODUCTO => 'Comida',
    P_COSTO => 9000,
    P_ID_PROVEEDOR => 1
    );
END;

--UPDATE 
CREATE OR REPLACE PROCEDURE ACTUALIZAR_PRODUCTO(
    P_ID_PRODUCTO IN INT, 
    P_NOMBRE_PRODUCTO IN VARCHAR2, 
    P_DESCRIPCION_PRODUCTO IN VARCHAR2,
    P_COSTO IN INT, 
    P_ID_PROVEEDOR IN INT
) IS
BEGIN 
    UPDATE PRODUCTO
    SET NOMBRE_PRODUCTO = P_NOMBRE_PRODUCTO,
        DESCRIPCION_PRODUCTO = P_DESCRIPCION_PRODUCTO,
        COSTO = P_COSTO,
        ID_PROVEEDOR = P_ID_PROVEEDOR
    WHERE ID_PRODUCTO = P_ID_PRODUCTO;
END;

BEGIN 
    ACTUALIZAR_PRODUCTO(
        P_ID_PRODUCTO => 2,
        P_NOMBRE_PRODUCTO => 'Pedi',
        P_DESCRIPCION_PRODUCTO => 'Comida Pedigree',
        P_COSTO => 8900, 
        P_ID_PROVEEDOR => 1
    );
END;

--ELIMINAR
CREATE OR REPLACE PROCEDURE ELIMINAR_PRODUCTO(
    P_ID_PRODUCTO IN INT
) IS
BEGIN 
    DELETE FROM PRODUCTO WHERE ID_PRODUCTO = P_ID_PRODUCTO;
END;

BEGIN 
    ELIMINAR_PRODUCTO(P_ID_PRODUCTO => 3);
END;

--LEER
CREATE OR REPLACE VIEW LEER_PRODUCTO AS 
SELECT ID_PRODUCTO, NOMBRE_PRODUCTO, DESCRIPCION_PRODUCTO, COSTO, ID_PROVEEDOR
FROM PRODUCTO;

CREATE OR REPLACE PROCEDURE MOSTRAR_PRODUCTOS
IS
BEGIN
        FOR v_producto IN (SELECT * FROM LEER_PRODUCTO) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_producto.ID_PRODUCTO || 
                             ', Nombre: ' || v_producto.NOMBRE_PRODUCTO ||
                             ', Descripcion: ' || v_producto.DESCRIPCION_PRODUCTO ||
                             ', Costo: ' || v_producto.COSTO || 
                             ', Proveedor: ' || v_producto.ID_PROVEEDOR);
    END LOOP;
END MOSTRAR_PRODUCTOS;

BEGIN 
    MOSTRAR_PRODUCTOS;
END;

--PROCEDIMIENTOS CRUD CITAS 
--CREATE 
CREATE SEQUENCE CITAS_SEQ
START WITH 1
INCREMENT BY 1  
NOCACHE
NOCYCLE;

CREATE OR REPLACE PROCEDURE INSERTAR_CITAS(
    P_FECHA_CITA IN DATE, 
    P_ID_CLIENTE IN INT, 
    P_ID_VETERINARIO IN INT, 
    P_ID_MASCOTA IN INT
) IS 
    v_id_cita CITAS.ID_CITA%TYPE;
BEGIN 
    SELECT CITAS_SEQ.NEXTVAL INTO v_id_cita FROM dual;
    
    INSERT INTO CITAS(ID_CITA, FECHA_CITA, ID_CLIENTE, ID_VETERINARIO, ID_MASCOTA)
    VALUES(v_id_cita, P_FECHA_CITA, P_ID_CLIENTE, P_ID_VETERINARIO, P_ID_MASCOTA);
END;

BEGIN 
    INSERTAR_CITAS(
        P_FECHA_CITA => TO_DATE('2023-09-19', 'YYYY-MM-DD'),
        P_ID_CLIENTE => 1, 
        P_ID_VETERINARIO => 1, 
        P_ID_MASCOTA => 3
    );
END;

--UPDATE
CREATE OR REPLACE PROCEDURE ACTUALIZAR_CITAS(
    P_ID_CITA IN INT, 
    P_FECHA_CITA IN DATE, 
    P_ID_CLIENTE IN INT, 
    P_ID_VETERINARIO IN INT, 
    P_ID_MASCOTA IN INT
) IS 
BEGIN 
    UPDATE CITAS
    SET FECHA_CITA = P_FECHA_CITA, 
        ID_CLIENTE = P_ID_CLIENTE, 
        ID_VETERINARIO = P_ID_VETERINARIO, 
        ID_MASCOTA = P_ID_MASCOTA
    WHERE ID_CITA = P_ID_CITA;
END;

BEGIN 
    ACTUALIZAR_CITAS(
        P_ID_CITA => 1,
        P_FECHA_CITA => TO_DATE('2022-07-19', 'YYYY-MM-DD'),
        P_ID_CLIENTE => 2,
        P_ID_VETERINARIO => 1, 
        P_ID_MASCOTA => 3
    );
END;

--ELIMINAR
CREATE OR REPLACE PROCEDURE ELIMINAR_CITAS(
    P_ID_CITA IN INT
) IS 
BEGIN 
    DELETE FROM CITAS WHERE ID_CITA = P_ID_CITA;
END;

BEGIN 
    ELIMINAR_CITAS(P_ID_CITA => 1);
END;

--LEER
CREATE OR REPLACE VIEW LEER_CITAS AS
SELECT ID_CITA, FECHA_CITA, ID_CLIENTE, ID_VETERINARIO, ID_MASCOTA
FROM CITAS;

CREATE OR REPLACE PROCEDURE MOSTRAR_CITAS
IS
BEGIN
    FOR v_cita IN (SELECT * FROM LEER_CITAS) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || v_cita.ID_CITA || 
                             ',Fecha Cita: ' || v_cita.FECHA_CITA ||
                             ', Cliente: ' || v_cita.ID_CLIENTE ||
                             ', Veterinario: ' || v_cita.ID_VETERINARIO ||
                             ', Mascota: ' || v_cita.ID_MASCOTA);
    END LOOP;
END MOSTRAR_CITAS;

BEGIN 
    MOSTRAR_CITAS;
END;

--FUNCIONES 



